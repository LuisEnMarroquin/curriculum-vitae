{"version":3,"sources":["i18n.ts","components/ButtonLink.tsx","components/MyFullName.tsx","assets/profile.jpg","components/ProfileImg.tsx","components/SelectLang.tsx","components/SimpleList.tsx","Home.tsx","index.tsx"],"names":["stkTime","arkTime","en","inteMain","i18nMain","webSites","estudios","certific","workExpe","techMain","inteOpts","i18nOpts","abmeText","sftkMain","sftkText","arkuMain","arkuText","tecmMain","tecmText","cdlgMain","cdlgText","es","ButtonLink","href","text","icon","target","rel","Button","color","startIcon","MyFullName","about","showMobile","theme","useTheme","desktopSize","useMediaQuery","breakpoints","up","fullName","Typography","variant","align","gutterBottom","Divider","useStyles","makeStyles","root","padding","textAlign","borderRadius","bg","width","md","sm","ProfileImg","classes","isBG","isMD","className","src","profile","alt","SelectLang","language","change","id","FormControl","fullWidth","Select","value","onChange","e","Number","inputProps","MenuItem","check","SimpleList","title","subtitle","contents","hr","map","item","index","isLast","length","Home","useState","lang","setLang","langID","setLangID","email","phone","split","reverse","join","Container","Grid","container","spacing","xs","render","document","getElementById"],"mappings":"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","file":"static/js/main.20f084a0.chunk.js","sourcesContent":["const tecTime = '08/2018 - 07/2021'\nconst stkTime = '06/2018 - 05/2021'\nconst arkTime = '05/2021 - present'\n\nexport const en = {\n  inteMain: 'Interest areas',\n  i18nMain: 'Languages',\n  webSites: 'Web sites',\n  estudios: 'Education',\n  certific: 'Courses and certificates',\n  workExpe: 'Work experience',\n  techMain: 'Technical expertise',\n  inteOpts: [\n    'Process automation',\n    'Server management',\n    'Full stack development',\n    'Application deployments',\n    'Algorithms and optimization'\n  ],\n  i18nOpts: [\n    'Spanish (native)',\n    'English (advanced)'\n  ],\n  abmeText: 'Full stack developer, Docker and DevOps enthusiast focused on delivering clean, fast and secure applications',\n  sftkMain: `Full stack developer and DevOps engineer at Softtek (${stkTime})`,\n  sftkText: [\n    'Frontend development using Bootstrap, JQuery, Vue, React, SCSS, Stylus, SPFX, TypeScript, Quasar and Material',\n    'Backend creation with NodeJS, using Express, JWT, TypeScript and Mongoose, with databases mostly in MongoDB',\n    'Process automation and multi-environment application deployment using Jenkins, Azure Pipelines and GitLab CI',\n    'Server management with Ubuntu Server with Nginx and multiple containerized applications with Docker Compose'\n  ],\n  arkuMain: `Full stack developer and DevOps engineer at Arkus Nexus (${arkTime})`,\n  arkuText: [\n    'Frontend development using React, React Context, TypeScript, Styled Components and Material',\n    'Backend creation with NodeJS, usando Express, Multer, TypeScript and Mongoose',\n    'Deploy automation to S3, ECR and ECS using Bitbucket Pipelines'\n  ],\n  tecmMain: `Computer Engineering and Administration, TecMilenio University (${tecTime})`,\n  tecmText: [\n    'Design algorithms to create systems capable of processing and transforming information, managing and analyzing data'\n  ],\n  cdlgMain: 'Codellege academy by Softtek',\n  cdlgText: [\n    'A 6 month course about HTML, CSS, JavaScript, JQuery, Bootstrap, MongoDB and NodeJS'\n  ]\n}\n\nexport const es = {\n  inteMain: 'Áreas de interés',\n  i18nMain: 'Idiomas',\n  webSites: 'Sitios web',\n  estudios: 'Estudios',\n  certific: 'Cursos y certificados',\n  workExpe: 'Experiencia laboral',\n  techMain: 'Conocimientos técnicos',\n  inteOpts: [\n    'Automatización de procesos',\n    'Administración de servidores',\n    'Desarrollo Full stack',\n    'Despliegue de aplicaciones',\n    'Algoritmos y optimización'\n  ],\n  i18nOpts: [\n    'Español (nativo)',\n    'Inglés (avanzado)'\n  ],\n  abmeText: 'Desarrollador Full stack, entusiasta de Docker y DevOps enfocado en entregar aplicaciones limpias, rápidas y seguras',\n  sftkMain: `Desarrollador Full stack e ingeniero DevOps en Softtek (${stkTime})`,\n  sftkText: [\n    'Desarrollo frontend usando Bootstrap, JQuery, Vue, React, SCSS, Stylus, SPFX, TypeScript, Quasar y Material',\n    'Creación de backends con NodeJS, usando Express, JWT, TypeScript y Mongoose, con bases de datos principalmente en MongoDB',\n    'Automatización de procesos y despliegue de aplicaciones multi ambiente usando Jenkins, Azure Pipelines y GitLab CI',\n    'Administración de servidores con Ubuntu Server con Nginx y multiples aplicaciones en contenedores con Docker Compose'\n  ],\n  arkuMain: `Desarrollador Full stack e ingeniero DevOps en Arkus Nexus (${stkTime})`,\n  arkuText: [\n    'Desarrollo frontend using React, React Context, TypeScript, Styled Components y Material',\n    'Creación de backends con NodeJS, usando Express, Multer, TypeScript y Mongoose',\n    'Automatización de deploys a S3, ECR y ECS usando Bitbucket Pipelines'\n  ],\n  tecmMain: `Ingeniería en Computación Administrativa, Universidad TecMilenio (${arkTime})`,\n  tecmText: [\n    'Diseñar algoritmos para crear sistemas capaces de procesar y transformar información, administrar y analizar datos de distintas áreas'\n  ],\n  cdlgMain: 'Curso de Codellege por Softtek',\n  cdlgText: [\n    'Un curso de 6 meses sobre HTML, CSS, JavaScript, JQuery, Bootstrap, MongoDB y NodeJS'\n  ]\n}\n","import Button from '@material-ui/core/Button'\nimport { ReactNode, ReactElement } from 'react'\n\ninterface IButtonLink {\n  href: string\n  text: string\n  icon: ReactNode\n}\n\nfunction ButtonLink ({ href, text, icon }: IButtonLink): ReactElement {\n  return (\n    <div>\n      <a href={href} target='_blank' rel='noopener noreferrer nofollow'>\n        <Button color='primary' startIcon={icon}>{text}</Button>\n      </a>\n    </div>\n  )\n}\n\nexport default ButtonLink\n","import { ReactElement } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Divider, Typography, useMediaQuery } from '@material-ui/core'\n\nfunction MyFullName ({ about, showMobile = false }: { about: string, showMobile?: boolean }): ReactElement|null {\n  const theme = useTheme()\n  const desktopSize = useMediaQuery(theme.breakpoints.up('md'))\n  const fullName = (\n    <section>\n      <Typography variant='h5' align='center' gutterBottom>Luis Enrique Marroquín González</Typography>\n      <Typography variant='body2' align='justify' gutterBottom>{about}</Typography>\n      <Divider />\n    </section>\n  )\n  return (\n    showMobile\n      ? desktopSize\n        ? null\n        : fullName\n      : !desktopSize\n        ? null\n        : fullName\n  )\n}\n\nexport default MyFullName\n","export default __webpack_public_path__ + \"static/media/profile.443b2643.jpg\";","import { ReactElement } from 'react'\nimport profile from 'assets/profile.jpg'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '15px 30px 15px 30px',\n    textAlign: 'center',\n    '& img': {\n      borderRadius: '20px'\n    }\n  },\n  bg: {\n    width: '90%'\n  },\n  md: {\n    width: '50%'\n  },\n  sm: {\n    width: '75%'\n  }\n})\n\nfunction ProfileImg (): ReactElement {\n  const theme = useTheme()\n  const classes = useStyles()\n  const isBG = useMediaQuery(theme.breakpoints.up('md'))\n  const isMD = useMediaQuery(theme.breakpoints.up('sm'))\n  return (\n    <div className={classes.root}>\n      <img className={isBG ? classes.bg : (isMD ? classes.md : classes.sm)} src={profile} alt='profile-img-not-found' />\n    </div>\n  )\n}\n\nexport default ProfileImg\n","import { ReactElement } from 'react'\nimport { Select, MenuItem, FormControl } from '@material-ui/core'\n\ninterface ISelectLang {\n  language: number\n  change: Function\n}\n\nfunction SelectLang ({ language, change }: ISelectLang): ReactElement {\n  return (\n    <div id='selectLang'>\n      <FormControl fullWidth>\n        <Select value={language} variant='outlined' onChange={e => change(Number(e.target.value))} inputProps={{ 'aria-label': 'Change language' }}>\n          <MenuItem value={1}>English</MenuItem>\n          <MenuItem value={2}>Español</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nexport default SelectLang\n","import { ReactElement } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Divider, Typography } from '@material-ui/core'\n\ninterface ISimpleList {\n  title?: string | undefined\n  subtitle?: string | undefined\n  contents?: string[] | undefined\n  hr?: boolean | undefined\n}\n\nconst useStyles = makeStyles({\n  check: {\n    color: '#E31C58'\n  }\n})\n\nfunction SimpleList ({ title = '', subtitle = '', contents = [], hr = false }: ISimpleList): ReactElement {\n  const classes = useStyles()\n  return (\n    <div>\n      {\n        title === '' ? null : <Typography variant='h6' align='center'>{title}</Typography>\n      }\n      {\n        subtitle === '' ? null : <Typography variant='body1' align='justify'>{subtitle}</Typography>\n      }\n      {\n        contents === [] ? null\n          : contents.map((item, index) => {\n            const isLast = contents.length === (index + 1)\n            return (\n              <Typography key={`${title}-${index}`} variant='body2' gutterBottom={isLast}>\n                <span className={classes.check}>✔ </span>\n                {item}\n              </Typography>\n            )\n          })\n      }\n      {\n        !hr ? null : <Divider />\n      }\n    </div>\n  )\n}\n\nexport default SimpleList\n","import { en, es } from 'i18n'\nimport { useState, ReactElement } from 'react'\nimport { Grid, Container } from '@material-ui/core'\n\nimport ButtonLink from 'components/ButtonLink'\nimport MyFullName from 'components/MyFullName'\nimport ProfileImg from 'components/ProfileImg'\nimport SelectLang from 'components/SelectLang'\nimport SimpleList from 'components/SimpleList'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport EmailIcon from '@material-ui/icons/Email'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport PublicIcon from '@material-ui/icons/Public'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp'\n\nfunction Home (): ReactElement {\n  const [lang, setLang] = useState(en)\n  const [langID, setLangID] = useState(1)\n\n  const changeLanguage = (id: number): void => {\n    setLangID(id)\n    if (id === 1) setLang(en)\n    if (id === 2) setLang(es)\n  }\n\n  const email = 'luis@marroquin.dev'\n  const phone = '154109681825'.split('').reverse().join('')\n\n  return (\n    <Container id='mainContainer'>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={3}>\n          <ProfileImg />\n          <MyFullName about={lang.abmeText} showMobile />\n          <ButtonLink href={`https://wa.me/${phone}`} text={`+${phone}`} icon={<WhatsAppIcon />} />\n          <ButtonLink href='https://www.google.com.mx/maps/place/Monterrey,+Nuevo+Leon' text='Monterrey, México' icon={<HomeIcon />} />\n          <ButtonLink href={`mailto:${email}`} text={email} icon={<EmailIcon />} />\n          <SimpleList title={lang.inteMain} contents={lang.inteOpts} />\n          <SimpleList title={lang.i18nMain} contents={lang.i18nOpts} />\n          <SimpleList title={lang.webSites} />\n          <ButtonLink href='https://github.com/LuisEnMarroquin' text='LuisEnMarroquin' icon={<GitHubIcon />} />\n          <ButtonLink href='https://www.linkedin.com/in/luisenmarroquin' text='LuisEnMarroquin' icon={<LinkedInIcon />} />\n          <ButtonLink href='https://www.luismarroquin.com' text='luismarroquin.com' icon={<PublicIcon />} />\n          <SelectLang language={langID} change={changeLanguage} />\n        </Grid>\n        <Grid item xs={12} sm={12} md={9}>\n          <MyFullName about={lang.abmeText} />\n          <SimpleList title={lang.certific} />\n          <SimpleList subtitle={lang.cdlgMain} contents={lang.cdlgText} hr />\n          <SimpleList title={lang.estudios} />\n          <SimpleList subtitle={lang.tecmMain} contents={lang.tecmText} hr />\n          <SimpleList title={lang.workExpe} />\n          <SimpleList subtitle={lang.sftkMain} contents={lang.sftkText} />\n          <SimpleList subtitle={lang.arkuMain} contents={lang.arkuText} hr />\n          <SimpleList title={lang.techMain} />\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={4}>\n              <SimpleList\n                subtitle='Languages' contents={\n                  ['Bash', 'Python', 'JavaScript', 'TypeScript']\n                }\n              />\n              <SimpleList\n                subtitle='CI/CD' contents={\n                  ['Jenkins', 'GitLab CI', 'GitHub Actions', 'Azure Pipelines', 'Bitbucket Pipelines']\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={4}>\n              <SimpleList\n                subtitle='Frameworks'\n                contents={['Vue (Quasar)', 'React (Material)', 'JQuery (Bootstrap)', 'NodeJS (Express)']}\n              />\n              <SimpleList\n                subtitle='Platforms'\n                contents={['Azure VMs', 'Digital Ocean', 'AWS S3', 'AWS EC2', 'AWS ECR']}\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={4}>\n              <SimpleList\n                subtitle='Containers'\n                contents={['Podman', 'Docker Swarm', 'Docker Compose']}\n              />\n              <SimpleList\n                subtitle='Databases'\n                contents={['MongoDB']}\n              />\n              <SimpleList\n                subtitle='OS'\n                contents={['macOS', 'Windows 10', 'Ubuntu Server']}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Home\n","import { render } from 'react-dom'\nimport Home from './Home'\nimport 'index.scss'\n\nrender(<Home />, document.getElementById('root'))\n"],"sourceRoot":""}